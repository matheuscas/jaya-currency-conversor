name: Testing

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      EXCHANGE_API_KEY: ${{ secrets.EXCHANGE_API_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Add Poetry to PATH
        run: echo "${{ runner.tool_cache }}/python/$(ls ${{ runner.tool_cache }}/python)/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install

      - name: Run migrations
        run: |
          cd currency_converter
          poetry run python manage.py migrate

      - name: Run tests with coverage
        run: |
          cd currency_converter
          poetry run coverage run manage.py test
          poetry run coverage report -m > coverage_report.txt || echo "Failed to generate coverage report"
          cat coverage_report.txt || echo "Failed to read coverage report"
          total_coverage=$(grep "^TOTAL" coverage_report.txt | awk '{print $NF}')
          echo "Total Coverage: $total_coverage%"

      - name: Generate coverage report
        run: |
          cd currency_converter
          poetry run coverage report -m
          # Extract total coverage percentage and print it
          total_coverage=$(grep "^TOTAL" coverage_report.txt | awk '{print $NF}')
          echo "Total Coverage: $total_coverage%"
          echo "##[set-output name=total_coverage;]$total_coverage"

      - name: Debug Output
        run: |
          echo "Total Coverage (before comment step): $total_coverage"

      - name: Comment on pull request
        if: always()
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.WORKFLOW_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            console.log("Total Coverage (inside comment script):", total_coverage);
            const message = `Test coverage: ${process.env.total_coverage}%`;
            github.issues.createComment({
              issue_number: prNumber,
              owner: owner,
              repo: repo,
              body: message
            });
